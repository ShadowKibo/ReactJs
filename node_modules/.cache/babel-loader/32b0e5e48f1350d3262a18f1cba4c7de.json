{"ast":null,"code":"var _jsxFileName = \"/home/amit/Documents/React/my-app/src/components/RefundDescription/RefundDescription.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport AppUrl from \"../../RestApi/AppUrl\";\nimport RestClient from \"../../RestApi/RestClient\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport Loading from \"../Loading/loading\";\nimport WentWrong from \"../WentWrong/WentWrong\";\nexport default class RefundDescription extends Component {\n  constructor() {\n    super();\n    this.state = {\n      desc: \"\",\n      loading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    RestClient.GetRequest(AppUrl.Information).then(result => {\n      if (result == null) {\n        this.setState({\n          error: true\n        });\n      }\n\n      this.setState({\n        desc: result[0][\"refund\"],\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loading == true) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, ReactHtmlParser(this.state.desc))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/amit/Documents/React/my-app/src/components/RefundDescription/RefundDescription.js"],"names":["React","Component","Fragment","Container","Row","Col","AppUrl","RestClient","ReactHtmlParser","Loading","WentWrong","RefundDescription","constructor","state","desc","loading","error","componentDidMount","GetRequest","Information","then","result","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,eAAe,MAAMC,iBAAN,SAAgCV,SAAhC,CAA0C;AACvDW,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,UAAU,CAACW,UAAX,CAAsBZ,MAAM,CAACa,WAA7B,EAA0CC,IAA1C,CAAgDC,MAAD,IAAY;AACzD,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAKC,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;;AACD,WAAKM,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEO,MAAM,CAAC,CAAD,CAAN,CAAU,QAAV,CAAR;AAA6BN,QAAAA,OAAO,EAAE;AAAtC,OAAd;AACD,KALD;AAMD;;AACDQ,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKV,KAAL,CAAWE,OAAX,IAAsB,IAA1B,EAAgC;AAC9B,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMP,eAAe,CAAC,KAAKK,KAAL,CAAWC,IAAZ,CAArB,CADF,CADF,CADF;AAOD;AACF;;AA7BsD","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport AppUrl from \"../../RestApi/AppUrl\";\nimport RestClient from \"../../RestApi/RestClient\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport Loading from \"../Loading/loading\";\nimport WentWrong from \"../WentWrong/WentWrong\";\nexport default class RefundDescription extends Component {\n  constructor() {\n    super();\n    this.state = {\n      desc: \"\",\n      loading: true,\n      error: false,\n    };\n  }\n  componentDidMount() {\n    RestClient.GetRequest(AppUrl.Information).then((result) => {\n      if (result == null) {\n        this.setState({ error: true });\n      }\n      this.setState({ desc: result[0][\"refund\"], loading: false });\n    });\n  }\n  render() {\n    if (this.state.loading == true) {\n      return <Loading />;\n    } else {\n      return (\n        <Fragment>\n          <Container className=\"mt-5\">\n            <Row>{ReactHtmlParser(this.state.desc)}</Row>\n          </Container>\n        </Fragment>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}